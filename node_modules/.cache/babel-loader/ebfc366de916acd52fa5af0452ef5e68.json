{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\contador\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { RecoilRoot, useRecoilState, atom } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RecoilRoot, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nconst textInputState = atom({\n  key: \"textInputState\",\n  default: \"\"\n});\n\nfunction TextInput() {\n  _s();\n\n  const [text, setText] = useRecoilState(textInputState);\n\n  const onInputChange = input => {\n    setText(input.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"7i368s/StnrMzqUyp1mkPwYUNas=\", false, function () {\n  return [useRecoilState];\n});\n\n_c2 = TextInput;\n\nfunction Counter() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }, this);\n}\n\n_c3 = Counter;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TextInput\");\n$RefreshReg$(_c3, \"Counter\");","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/contador/src/App.js"],"names":["RecoilRoot","useRecoilState","atom","App","textInputState","key","default","TextInput","text","setText","onInputChange","input","target","value","Counter"],"mappings":";;;AAAA,SACEA,UADF,EAEEC,cAFF,EAGEC,IAHF,QAKO,QALP;;;AAOA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAQT,MAAMC,cAAc,GAAGF,IAAI,CAAC;AAC1BG,EAAAA,GAAG,EAAE,gBADqB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAD,CAA3B;;AAKA,SAASC,SAAT,GAAoB;AAAA;;AAElB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBR,cAAc,CAACG,cAAD,CAAxC;;AAEA,QAAMM,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,KAAK,EAAEL,IAAd;AAAoB,MAAA,QAAQ,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbQH,S;UAEmBN,c;;;MAFnBM,S;;AAeT,SAASO,OAAT,GAAkB;AAEhB,sBAAQ;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;MAHQA,O;AAKT,eAAeX,GAAf","sourcesContent":["import {\n  RecoilRoot,\n  useRecoilState,\n  atom\n\n} from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n\n    </RecoilRoot>\n  );\n}\n\nconst textInputState = atom({\n  key: \"textInputState\",\n  default: \"\"\n})\n\nfunction TextInput(){\n\n  const [ text, setText ] = useRecoilState(textInputState)\n  \n  const onInputChange = (input) => {\n    setText(input.target.value)\n  }\n\n  return (\n    <div>\n      <input value={text} onChange={onInputChange} />\n    </div>\n  )\n}\n\nfunction Counter(){\n\n  return (<span></span>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}